// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vshn/stardog-userrole-operator/stardogrest/models"
)

// GetUserReader is a Reader for the GetUser structure.
type GetUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetUserOK creates a GetUserOK with default headers values
func NewGetUserOK() *GetUserOK {
	return &GetUserOK{}
}

/*
GetUserOK describes a response with status code 200, with default header values.

A user if it exists
*/
type GetUserOK struct {
	Payload *models.Users
}

// IsSuccess returns true when this get user o k response has a 2xx status code
func (o *GetUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user o k response has a 3xx status code
func (o *GetUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user o k response has a 4xx status code
func (o *GetUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user o k response has a 5xx status code
func (o *GetUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user o k response a status code equal to that given
func (o *GetUserOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user o k response
func (o *GetUserOK) Code() int {
	return 200
}

func (o *GetUserOK) Error() string {
	return fmt.Sprintf("[GET /admin/users/{user}][%d] getUserOK  %+v", 200, o.Payload)
}

func (o *GetUserOK) String() string {
	return fmt.Sprintf("[GET /admin/users/{user}][%d] getUserOK  %+v", 200, o.Payload)
}

func (o *GetUserOK) GetPayload() *models.Users {
	return o.Payload
}

func (o *GetUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Users)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserNotFound creates a GetUserNotFound with default headers values
func NewGetUserNotFound() *GetUserNotFound {
	return &GetUserNotFound{}
}

/*
GetUserNotFound describes a response with status code 404, with default header values.

User does not exist
*/
type GetUserNotFound struct {
	Payload *models.NotExists
}

// IsSuccess returns true when this get user not found response has a 2xx status code
func (o *GetUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user not found response has a 3xx status code
func (o *GetUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user not found response has a 4xx status code
func (o *GetUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user not found response has a 5xx status code
func (o *GetUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user not found response a status code equal to that given
func (o *GetUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get user not found response
func (o *GetUserNotFound) Code() int {
	return 404
}

func (o *GetUserNotFound) Error() string {
	return fmt.Sprintf("[GET /admin/users/{user}][%d] getUserNotFound  %+v", 404, o.Payload)
}

func (o *GetUserNotFound) String() string {
	return fmt.Sprintf("[GET /admin/users/{user}][%d] getUserNotFound  %+v", 404, o.Payload)
}

func (o *GetUserNotFound) GetPayload() *models.NotExists {
	return o.Payload
}

func (o *GetUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotExists)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserDefault creates a GetUserDefault with default headers values
func NewGetUserDefault(code int) *GetUserDefault {
	return &GetUserDefault{
		_statusCode: code,
	}
}

/*
GetUserDefault describes a response with status code -1, with default header values.

unexpected error
*/
type GetUserDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get user default response has a 2xx status code
func (o *GetUserDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get user default response has a 3xx status code
func (o *GetUserDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get user default response has a 4xx status code
func (o *GetUserDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get user default response has a 5xx status code
func (o *GetUserDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get user default response a status code equal to that given
func (o *GetUserDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get user default response
func (o *GetUserDefault) Code() int {
	return o._statusCode
}

func (o *GetUserDefault) Error() string {
	return fmt.Sprintf("[GET /admin/users/{user}][%d] getUser default  %+v", o._statusCode, o.Payload)
}

func (o *GetUserDefault) String() string {
	return fmt.Sprintf("[GET /admin/users/{user}][%d] getUser default  %+v", o._statusCode, o.Payload)
}

func (o *GetUserDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
