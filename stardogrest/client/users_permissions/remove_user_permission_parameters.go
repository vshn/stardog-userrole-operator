// Code generated by go-swagger; DO NOT EDIT.

package users_permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vshn/stardog-userrole-operator/stardogrest/models"
)

// NewRemoveUserPermissionParams creates a new RemoveUserPermissionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewRemoveUserPermissionParams() *RemoveUserPermissionParams {
	return &RemoveUserPermissionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewRemoveUserPermissionParamsWithTimeout creates a new RemoveUserPermissionParams object
// with the ability to set a timeout on a request.
func NewRemoveUserPermissionParamsWithTimeout(timeout time.Duration) *RemoveUserPermissionParams {
	return &RemoveUserPermissionParams{
		timeout: timeout,
	}
}

// NewRemoveUserPermissionParamsWithContext creates a new RemoveUserPermissionParams object
// with the ability to set a context for a request.
func NewRemoveUserPermissionParamsWithContext(ctx context.Context) *RemoveUserPermissionParams {
	return &RemoveUserPermissionParams{
		Context: ctx,
	}
}

// NewRemoveUserPermissionParamsWithHTTPClient creates a new RemoveUserPermissionParams object
// with the ability to set a custom HTTPClient for a request.
func NewRemoveUserPermissionParamsWithHTTPClient(client *http.Client) *RemoveUserPermissionParams {
	return &RemoveUserPermissionParams{
		HTTPClient: client,
	}
}

/*
RemoveUserPermissionParams contains all the parameters to send to the API endpoint

	for the remove user permission operation.

	Typically these are written to a http.Request.
*/
type RemoveUserPermissionParams struct {

	/* Permission.

	   The permission to remove
	*/
	Permission *models.Permission

	/* User.

	   The user to remove the permission from
	*/
	User string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the remove user permission params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RemoveUserPermissionParams) WithDefaults() *RemoveUserPermissionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the remove user permission params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RemoveUserPermissionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the remove user permission params
func (o *RemoveUserPermissionParams) WithTimeout(timeout time.Duration) *RemoveUserPermissionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the remove user permission params
func (o *RemoveUserPermissionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the remove user permission params
func (o *RemoveUserPermissionParams) WithContext(ctx context.Context) *RemoveUserPermissionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the remove user permission params
func (o *RemoveUserPermissionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the remove user permission params
func (o *RemoveUserPermissionParams) WithHTTPClient(client *http.Client) *RemoveUserPermissionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the remove user permission params
func (o *RemoveUserPermissionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPermission adds the permission to the remove user permission params
func (o *RemoveUserPermissionParams) WithPermission(permission *models.Permission) *RemoveUserPermissionParams {
	o.SetPermission(permission)
	return o
}

// SetPermission adds the permission to the remove user permission params
func (o *RemoveUserPermissionParams) SetPermission(permission *models.Permission) {
	o.Permission = permission
}

// WithUser adds the user to the remove user permission params
func (o *RemoveUserPermissionParams) WithUser(user string) *RemoveUserPermissionParams {
	o.SetUser(user)
	return o
}

// SetUser adds the user to the remove user permission params
func (o *RemoveUserPermissionParams) SetUser(user string) {
	o.User = user
}

// WriteToRequest writes these params to a swagger request
func (o *RemoveUserPermissionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Permission != nil {
		if err := r.SetBodyParam(o.Permission); err != nil {
			return err
		}
	}

	// path param user
	if err := r.SetPathParam("user", o.User); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
